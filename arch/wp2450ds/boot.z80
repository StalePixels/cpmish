; Brother WP2450DS cpmish BIOS Â© 2019 David Given
; This file is distributable under the terms of the 2-clause BSD license.
; See COPYING.cpmish in the distribution root directory for more information.

; This is the executable which is loaded and run by the Brother's OS. It
; gets loaded with BBR=CBR=0x60, CBAR=0x55, which means that DRAM from
; physical addresses 0x65000 to 0x6ffff is mapped to logical 0x5000 to 0xffff.

    maclib wp2450ds
    maclib cpmish

    extrn FDCAL2
    extrn FDTX
    extrn FDR512
    extrn FDRSTAT
    extrn FDDEBLK

start:
    dw 0xc181           ; Brother magic numbers
    dw 0x0101
    dw 0x0000
    db "BR"

    di                  ; The Brother OS is not at home

    xor a
    out0a CBAR          ; now the entire address space is RAM
    ld sp, 0x100        ; startup stack

    ; Clear the screen

    ld b, a
    out0b PORT_VIDEO_ADDR_LO
    out0b PORT_VIDEO_ADDR_HI
    ld hl, SCREEN_WIDTH * SCREEN_HEIGHT * 8
.2
    out0b PORT_VIDEO_DATA_W
    dec hl
    ld a, h
    or l
    jr nz, .2

    ; Configure the serial port.

    ld a, 01100100b     ; RE, TE, MOD2(8n1)
    out0a CNTLA1
    ld a, 00000010b     ; SS1(/4 clock divider)
    out0a CNTLB1

    ; Set up the disk system.

    ld a, 'A'
    call putserial
    call FDCAL2

    ld a, 'B'
    call putserial
    ld a, 0x03          ; SPECIFY
    call FDTX

    ld a, 'C'
    call putserial
    ld a, 0xdf          ; SRT, HUT
    call FDTX

    ld a, 'D'
    call putserial
    ld a, 0x0c          ; HLT, !ND
    call FDTX

    ld a, 'E'
    call putserial
    call FDRSTAT

    ld a, 'F'
    call putserial

    ld d, 1             ; current track
    ld e, 0             ; current sector
    ld hl, LOAD_ADDRESS ; destination address
.1
    push de
    push hl
    call FDR512
    pop de
    ld bc, 512
    ldir                ; copy buffer data to memory
    ex de, hl           ; updated destination address to HL
    pop de

    inc e
    ld a, 18
    cp e
    jr nz, .1           ; loop again

    ld a, 'G'
    call putserial

    jp BIOS_ADDRESS

putserial:
    push af
.1
    in0a STAT1
    and 1<<1            ; TDRE
    jr z, .1            ; loop until ready to transmit
    pop af
    out0a TDR1
    ret

; vim: ts=4 sw=4 et ft=asm

